//
//  RegisterInteractor.swift
//  BeCareful
//
//  Created by Carlos David Barr√≤n Villegas on 20/08/20.
//  Copyright (c) 2020 Jose Alberto. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegisterBusinessLogic {
    func validatePhone(request: Register.Phone.Request)
    func showError()
}

protocol RegisterDataStore {
    //var name: String { get set }
}

class RegisterInteractor: RegisterBusinessLogic, RegisterDataStore {
    var presenter: RegisterPresentationLogic?
    lazy var worker: RegisterWorker = RegisterWorker()
    private var idDevice: String = UIDevice.current.identifierForVendor!.uuidString
    
    //var name: String = ""

    // MARK: Validate phone

    func validatePhone(request: Register.Phone.Request) {
        worker = RegisterWorker()
        switch worker.validatePhone(phoneNumber: request.phoneNumber) {
        case true:
            let response = Register.Phone.Response()
            presenter?.presentVerifyCode(response: response)
        case false:
            showError()
        }
    }
    
    func showError() {
        presenter?.presentError()
    }
}

