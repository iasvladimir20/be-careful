//
//  RegisterViewController.swift
//  BeCareful
//
//  Created by Carlos David BarrÃ²n Villegas on 20/08/20.
//  Copyright (c) 2020 Jose Alberto. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegisterDisplayLogic: class {
    func displayVerifyCode(viewModel: Register.Phone.ViewModel)
    func showError()
}

class RegisterViewController: UIViewController, RegisterDisplayLogic {
    var interactor: RegisterBusinessLogic?
    var router: (NSObjectProtocol & RegisterRoutingLogic & RegisterDataPassing)?
    
    
    // MARK: Outlets
    @IBOutlet weak var phoneNumber: UITextField!
    @IBOutlet weak var separator: UIView!
    @IBOutlet weak var error: UILabel!

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = RegisterInteractor()
        let presenter = RegisterPresenter()
        let router = RegisterRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
        let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setupTextField()
    }

    // MARK: Register 

    @IBAction func sendRegister(_ sender: Any) {
        validateData()
    }
    
    func validateData() {
        let phone = phoneNumber.text
        let request = Register.Phone.Request(phoneNumber: phone)
        interactor?.validatePhone(request: request)
    }

    func displayVerifyCode(viewModel: Register.Phone.ViewModel) {
        let storyboard = UIStoryboard.register
        guard let formVC = storyboard.instantiateViewController(withIdentifier: "verifyCode") as? VerifyCodeViewController else { return }
        navigationController?.pushViewController(formVC, animated: true)
    }
    
    func showError() {
        error.isHidden = false
        separator.backgroundColor = .red
    }
    
    func setupTextField() {
        phoneNumber.delegate = self
    }
}

extension RegisterViewController: UITextFieldDelegate {

    func textFieldDidBeginEditing(_ textField: UITextField) {
        separator.backgroundColor = UIColor.smBlue
        error.isHidden = true
    }

    func textFieldDidEndEditing(_ textField: UITextField) {
        separator.backgroundColor = .black
    }

    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        phoneNumber.endEditing(true)
        return true
    }

    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        view.endEditing(true)
    }

    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        guard let textFieldText = textField.text, let rangeOfTextToReplace = Range(range, in: textFieldText) else { return false }
        let substringToReplace = textFieldText[rangeOfTextToReplace]
        let count = textFieldText.count - substringToReplace.count + string.count
        return count <= 10
    }
}
